/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.31
 * Generated at: 2018-11-25 19:48:44 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.resources.common;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class sub_005fmy_005fheader_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<style>\r\n");
      out.write("\t#header-navi{\r\n");
      out.write("\t\theight:60px;\r\n");
      out.write("\t\twidth:100%;\r\n");
      out.write("\t\tbackground-color: black;\r\n");
      out.write("\t\tposition: fixed;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t#header-navi a:nth-child(1){\r\n");
      out.write("\t\tline-height: 60px;\r\n");
      out.write("\t\ttext-decoration : none;\r\n");
      out.write("\t\tfloat : left;\r\n");
      out.write("\t}\r\n");
      out.write("\t#header-navi>span{\r\n");
      out.write("\t\tline-height: 60px;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t#header-navi a:nth-child(1) img{\r\n");
      out.write("\t\tpadding-left:265px; \r\n");
      out.write("\t\twidth:60px;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t#header-navi a:nth-child(2){\r\n");
      out.write("\t\tcolor:white;\r\n");
      out.write("\t\tpadding-left:10px; font-size:20px;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t#header-navi a:hover{\r\n");
      out.write("\t\tcolor:yellow;\r\n");
      out.write("\t}\r\n");
      out.write("\t#pw-change{\r\n");
      out.write("\t\tcolor : white;\r\n");
      out.write("\t\tfont-size : 20px;\r\n");
      out.write("\t\tfont-weight: bolder;\r\n");
      out.write("\t}\r\n");
      out.write("\t#pw-change{\r\n");
      out.write("\t\tfloat:right; \r\n");
      out.write("\t\tline-height: 60px;\r\n");
      out.write("\t\tmargin-right:500px;\r\n");
      out.write("\t\tcursor: pointer;\r\n");
      out.write("\t}\r\n");
      out.write("\t#pw-change:hover{\r\n");
      out.write("\t\tcolor : blue;\r\n");
      out.write("\t}\r\n");
      out.write("\t#pw-change-box{\r\n");
      out.write("\t\tdisplay: none;\r\n");
      out.write("\t\tborder:1px solid black;\r\n");
      out.write("\t\twidth : 500px;\r\n");
      out.write("\t\theight : 600px;\r\n");
      out.write("\t\tmargin-right:300px;\r\n");
      out.write("\t\tbackground-color : white;\r\n");
      out.write("\t\tfloat:right; \r\n");
      out.write("\t\tpadding-left : 30px;\r\n");
      out.write("\t\tpadding-right : 30px;\r\n");
      out.write("\t}\r\n");
      out.write("\t#pw-change-box span:nth-child(1){\r\n");
      out.write("\t\tfont-size : 25px;\r\n");
      out.write("\t\tfont-weight: bolder;\r\n");
      out.write("\t\tline-height: 50px;\r\n");
      out.write("\t}\r\n");
      out.write("\t#pw-change-box span:nth-child(3){\r\n");
      out.write("\t\tcolor : blue;\r\n");
      out.write("\t\tline-height: 30px;\r\n");
      out.write("\t}\r\n");
      out.write("\t#pw-change-box span:nth-child(5){\r\n");
      out.write("\t\tcolor : red;\r\n");
      out.write("\t\tline-height: 30px;\r\n");
      out.write("\t}\r\n");
      out.write("\t#pw-change-box span:nth-child(7){\r\n");
      out.write("\t\tcolor : red;\r\n");
      out.write("\t\tline-height: 30px;\r\n");
      out.write("\t}\r\n");
      out.write("\t#pw-change-box input{\r\n");
      out.write("\t\tfont-size : 25px;\r\n");
      out.write("\t\tborder : 4px solid #D5D5D5;\r\n");
      out.write("\t}\r\n");
      out.write("\t#pw-change-box button{\r\n");
      out.write("\t\twidth: 100%;\r\n");
      out.write("\t\theight : 60px;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t#pass-btn-confirm{\r\n");
      out.write("\t\tbackground-color : #003399;\r\n");
      out.write("\t\tcolor : white;\r\n");
      out.write("\t}\r\n");
      out.write("\t#pass-btn-reset{\r\n");
      out.write("\t\tbackground-color :#F6F6F6;\r\n");
      out.write("\t}\r\n");
      out.write("\t#captcha{\r\n");
      out.write("\t\tdisplay : none;\r\n");
      out.write("\t\twidth :100%;\r\n");
      out.write("\t\theight : 200px;\r\n");
      out.write("\t\tborder : 1px solid red;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("$(document).ready(function(){\r\n");
      out.write("\t\tvar passFlag = 0;\r\n");
      out.write("\t\t$('#pw-change').click(function(){\r\n");
      out.write("\t\t\t$(\"#pw-change-box\").slideToggle();\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t$('#pw-change-box input').focus(function()\r\n");
      out.write("\t\t{\r\n");
      out.write("\t\t\t$(this).css('border','4px solid #003399');\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t$('#pw-change-box input').blur(function(){\r\n");
      out.write("\t\t\t$(this).css('border','4px solid #D5D5D5');\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t$('#pass-btn-confirm').click(function(){\r\n");
      out.write("\t\t\tvar present_pass = $('#present_pass').val();\r\n");
      out.write("\t\t\tvar new_pass = $('#new_pass').val();\r\n");
      out.write("\t\t\tvar new_pass_re = $('#new_pass_re').val();\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tif(present_pass=='' || new_pass=='' || new_pass_re=='')\r\n");
      out.write("\t\t\t{\r\n");
      out.write("\t\t\t\talert(\"비밀번호를 입력해주세요\");\r\n");
      out.write("\t\t\t}else if(new_pass != new_pass_re)\r\n");
      out.write("\t\t\t{\r\n");
      out.write("\t\t\t\talert(\"새 비밀번호와 확인 비밀번호가 일치 해야 합니다.\");\r\n");
      out.write("\t\t\t}else{\r\n");
      out.write("\t\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\t\turl : \"/member/memberPwChange.kh\",\r\n");
      out.write("\t\t\t\t\tdata : {prePw:present_pass, newPw:new_pass},\r\n");
      out.write("\t\t\t\t\ttype : \"post\",\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\tsuccess : function(result){\r\n");
      out.write("\t\t\t\t\t\t\tif(result=='true')\r\n");
      out.write("\t\t\t\t\t\t\t{\r\n");
      out.write("\t\t\t\t\t\t\t\talert('비밀번호가 정상적으로 변경되었습니다.');\r\n");
      out.write("\t\t\t\t\t\t\t\t$('#pw-change-box input').val('');\r\n");
      out.write("\t\t\t\t\t\t\t\t$('#pw-change-box input').next().next().text('');\r\n");
      out.write("\t\t\t\t\t\t\t\t$('#pw-change-box input').css('border','4px solid #D5D5D5');\r\n");
      out.write("\t\t\t\t\t\t\t\t$(\"#pw-change-box\").slideToggle();\r\n");
      out.write("\t\t\t\t\t\t\t}else{\r\n");
      out.write("\t\t\t\t\t\t\t\talert('현재 비밀번호가 맞지 않습니다. 재확인 바랍니다.');\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\terror : function(){\r\n");
      out.write("\t\t\t\t\t\tconsole.log(\"서버 전송 실패\");\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t$('#pass-btn-reset').click(function(){\r\n");
      out.write("\t\t\t$(\"#pw-change-box\").slideToggle();\r\n");
      out.write("\t\t\t$('#pw-change-box input').val('');\r\n");
      out.write("\t\t\t$('#pw-change-box input').next().next().text('');\r\n");
      out.write("\t\t\t$('#pw-change-box input').css('border','4px solid #D5D5D5');\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t$('#new_pass').blur(function(){\r\n");
      out.write("\t\t\tvar data = $(this).val();\r\n");
      out.write("\t\t\tpwCheck(this,data);\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t//비밀번호 적절성 체크 메소드\r\n");
      out.write("\t\tfunction pwCheck(id,data){\r\n");
      out.write("\t\t\tvar expr = /^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$/;\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tif(expr.test(data))\r\n");
      out.write("\t\t\t{\r\n");
      out.write("\t\t\t\t$(id).css('border','4px solid #003399');\r\n");
      out.write("\t\t\t\t$(id).next().next().text('사용가능한 비밀번호 입니다.');\r\n");
      out.write("\t\t\t\t$(id).next().next().css('color','#003399');\r\n");
      out.write("\t\t\t\t$(id).next().next().css('font-size','12px');\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\telse\r\n");
      out.write("\t\t\t{\r\n");
      out.write("\t\t\t\t$(id).css('border','4px solid red');\r\n");
      out.write("\t\t\t\t$(id).next().next().text('1개 이상의 영소문자, 영대문자, 특수문자, 숫자를 포함해주세요(8글자 이상)');\r\n");
      out.write("\t\t\t\t$(id).next().next().css('color','red');\r\n");
      out.write("\t\t\t\t$(id).next().next().css('font-size','12px');\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("});\r\n");
      out.write("</script>\r\n");
      out.write("<body>\r\n");
      out.write("\t<div id=\"header-navi\">\r\n");
      out.write("\t\t<a href=\"/index.jsp\"><img id=\"img1\" src=\"/resources/png/03_KH정보교육원_원형흑백.png\"></img></a>\r\n");
      out.write("\t\t<a href=\"/member/myInfo.kh\"><B>내정보</B></a><span style=\"color:white;\"> - 소중한 개인 정보! 보안을 철저히!!</span>\r\n");
      out.write("\t\t<span id=\"pw-change\">비밀번호 변경</span>\r\n");
      out.write("\t\t<div id=\"pw-change-box\">\r\n");
      out.write("\t\t\t<span>비밀번호 변경</span><br>\r\n");
      out.write("\t\t\t<span>안전한 비밀번호로 내정보를 보호하세요</span><br>\r\n");
      out.write("\t\t\t<span> * 다른 아이디/사이트에서 사용한 적 없는 비밀번호</span><br>\r\n");
      out.write("\t\t\t<span> * 이전에 사용한 적 없는 비밀번호</span>가 안전합니다.<br><br><br>\r\n");
      out.write("\t\t\t<input type=\"password\" name=\"present_pass\" id=\"present_pass\" placeholder=\"현재 비밀번호\" /><br><br>\r\n");
      out.write("\t\t\t<input type=\"password\" name=\"new_pass\" id=\"new_pass\" placeholder=\"새 비밀번호\" /><br><span></span><br>\r\n");
      out.write("\t\t\t<input type=\"password\" name=\"new_pass_re\" id=\"new_pass_re\" placeholder=\"새 비밀번호 확인\" /><br><br>\r\n");
      out.write("\t\t\t<br>\r\n");
      out.write("\t\t\t<div id=\"captcha\">\r\n");
      out.write("\t\t\t\t\t<!-- captcha 아직 미구현 -->\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<br><br>\r\n");
      out.write("\t\t\t<button id=\"pass-btn-confirm\">확인</button><br><Br>\r\n");
      out.write("\t\t\t<button id=\"pass-btn-reset\">취소</button><br><Br>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t\r\n");
      out.write("\t</div>\r\n");
      out.write("\t\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
